const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const express = require('express');
const cors = require('cors');

// โ ุชูููุฏ OTP
function generateOTP() {
  return Math.floor(100000 + Math.random() * 900000).toString();
}

// โ ุฅุนุฏุงุฏ WhatsApp client
const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: {
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  }
});

// โ ุทุจุงุนุฉ QR ุจุงููููุณูู
client.on('qr', (qr) => {
  console.log('๐ฑ ุงูุณุญ ููุฏุง ุงูู QR ูุชุณุฌูู ุงูุฏุฎูู:');
  qrcode.generate(qr, { small: true });
});

// โ ุฌุงูุฒูุฉ WhatsApp
client.on('ready', () => {
  console.log('โ WhatsApp ุฌุงูุฒ!');
});

client.initialize();

// โ ุฅุนุฏุงุฏ Express API
const app = express();
app.use(cors());
app.use(express.json());

// โ Endpoint ูุฅุฑุณุงู OTP
app.post('/send-otp', async (req, res) => {
  const phone = req.body.phone;
  if (!phone) return res.status(400).send({ status: "error", message: "Phone number missing" });

  const otp = generateOTP();
  try {
    await client.sendMessage(`${phone}@c.us`, `ุฑูุฒ ุงูุชุญูู ุงูุฎุงุต ุจู ูู: ${otp}`);
    console.log(`โ OTP ${otp} ุงูุจุนุช ูุฑูู ${phone}`);
    res.send({ status: "success", otp });
  } catch (e) {
    console.error(`โ ูุดู ุงูุฅุฑุณุงู:`, e.message);
    res.status(500).send({ status: "error", message: "ูุดู ุงูุฅุฑุณุงู" });
  }
});

// โ ุดุบู ุงูุณูุฑูุฑ ุนูู ุงูุจูุฑุช 10000
const PORT = 10000;
app.listen(PORT, () => {
  console.log(`๐ ุงูุณูุฑูุฑ ุดุบูุงู ุนูู ุงูุจูุฑุช ${PORT}`);
});
